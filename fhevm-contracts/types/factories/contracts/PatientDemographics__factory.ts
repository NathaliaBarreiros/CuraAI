/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PatientDemographics,
  PatientDemographicsInterface,
} from "../../contracts/PatientDemographics";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
    ],
    name: "PatientDataSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "totalPatients",
        type: "uint32",
      },
    ],
    name: "StatisticsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "ageGroup15_20",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ageGroup21_30",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ageGroup31_40",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ageGroup41_50",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ageGroup51_60",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ageGroup61Plus",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "argentinaCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "brasilCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canadaCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ecuadorCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "femaleCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "franciaCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCountryStatistics",
    outputs: [
      {
        internalType: "euint32",
        name: "ecuador",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "argentina",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "brasil",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "us",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "canada",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "francia",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEncryptedData",
    outputs: [
      {
        internalType: "euint8",
        name: "age",
        type: "bytes32",
      },
      {
        internalType: "euint8",
        name: "gender",
        type: "bytes32",
      },
      {
        internalType: "euint16",
        name: "countryCode",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStatistics",
    outputs: [
      {
        internalType: "euint32",
        name: "total",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "females",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "males",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "nonBinary",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "preferNotToSay",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "age15_20",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "age21_30",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "age31_40",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "age41_50",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "age51_60",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "age61Plus",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "patientAddr",
        type: "address",
      },
    ],
    name: "hasPatientData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maleCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonBinaryCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "preferNotToSayCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8",
        name: "encryptedAge",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "ageProof",
        type: "bytes",
      },
      {
        internalType: "externalEuint8",
        name: "encryptedGender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "genderProof",
        type: "bytes",
      },
      {
        internalType: "externalEuint16",
        name: "encryptedCountryCode",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "countryProof",
        type: "bytes",
      },
    ],
    name: "submitPatientData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPatients",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200017e620000b360408051608081018252600080825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf696020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273901f8942346f7ab3a01f6d7613119bca447bb030606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b03938416179091556020830151600080516020620016e38339815191528054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c28812179055620001cf6000620002c8565b600155620001de6000620002c8565b600255620001ed6000620002c8565b600355620001fc6000620002c8565b6004556200020b6000620002c8565b6005556200021a6000620002c8565b600655620002296000620002c8565b600755620002386000620002c8565b600855620002476000620002c8565b600955620002566000620002c8565b600a55620002656000620002c8565b600b55620002746000620002c8565b600c55620002836000620002c8565b600d55620002926000620002c8565b600e55620002a16000620002c8565b600f55620002b06000620002c8565b601055620002bf6000620002c8565b601155620003e5565b6000620002dd63ffffffff83166004620002e3565b92915050565b600080516020620016e383398151915254604051639cd07acb60e01b81526000917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b0390911690639cd07acb906200034a908790879060040162000398565b6020604051808303816000875af11580156200036a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003909190620003cb565b949350505050565b8281526040810160548310620003be57634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600060208284031215620003de57600080fd5b5051919050565b6112ee80620003f56000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063a16ae481116100b8578063bf4092981161007c578063bf4092981461028e578063deb5ef0914610297578063e45dc1e6146102a0578063e5e63837146102a9578063e6561d9c146102e8578063f1058cb9146102f157600080fd5b8063a16ae48114610229578063a41285a914610232578063aed61dbe1461023b578063b5f1e1ac14610244578063b7079cfd1461025957600080fd5b80634557d8421161010a5780634557d842146101f357806367713933146101fc57806369eceb9a146102055780637ff19b111461020e57806397b1bb15146102175780639f791d731461022057600080fd5b80631f2a1e5d146101475780632b19522114610163578063372d6b271461018657806342487e4c146101e1578063455237f0146101ea575b600080fd5b61015060065481565b6040519081526020015b60405180910390f35b61016b6102fa565b6040805193845260208401929092529082015260600161015a565b61018e6103b2565b604080519b8c5260208c019a909a52988a01979097526060890195909552608088019390935260a087019190915260c086015260e08501526101008401526101208301526101408201526101600161015a565b610150600a5481565b61015060115481565b61015060025481565b61015060075481565b610150600c5481565b610150600d5481565b610150600f5481565b61015060085481565b610150600e5481565b61015060105481565b61015060045481565b610257610252366004611071565b61043c565b005b610261610649565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161015a565b61015060035481565b61015060015481565b610150600b5481565b6102d86102b736600461112a565b6001600160a01b031660009081526020819052604090206003015460ff1690565b604051901515815260200161015a565b61015060095481565b61015060055481565b336000908152602081905260408120600301548190819060ff166103655760405162461bcd60e51b815260206004820152601b60248201527f4e6f206461746120666f756e6420666f7220746869732075736572000000000060448201526064015b60405180910390fd5b50503360009081526020818152604091829020825160808101845281548082526001830154938201849052600283015494820185905260039092015460ff16151560609091015293909250565b33600090815260208190526040812060030154819081908190819081908190819081908190819060ff166103f85760405162461bcd60e51b815260040161035c90611153565b600154600254600354600454600554600654600754600854600954600a54600b549a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b3360009081526020819052604090206003015460ff161561049f5760405162461bcd60e51b815260206004820152601b60248201527f50617469656e74206461746120616c7265616479206578697374730000000000604482015260640161035c565b60006104e18a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106a792505050565b905060006105258888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106a792505050565b905060006105698686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106bc92505050565b60408051608081018252858152602080820186815282840185815260016060850181815233600090815294859052959093209351845590519183019190915551600282015590516003909101805460ff191691151591909117905590506105d18383836106ca565b6105da83610736565b506105e58333610746565b506105ef82610736565b506105fa8233610746565b5061060481610736565b5061060f8133610746565b5060405133907f9fb9e34185cb1e66815309eac082ad9a0b85d726f0324d4d36b21f435977f15190600090a2505050505050505050505050565b336000908152602081905260408120600301548190819081908190819060ff166106855760405162461bcd60e51b815260040161035c90611153565b5050600c54600d54600e54600f54601054601154949993985091965094509250565b60006106b583836002610759565b9392505050565b60006106b583836003610759565b6106df6001546106da600161085e565b610877565b6001556106eb826108a9565b6106f48361093b565b6106fd81610a43565b604051600181527faaf39d6bd9f881cb15972f9d2c929863a54205e8a6f655beed6431fe4319e1049060200160405180910390a1505050565b60006107428230610aec565b5090565b60006107528383610aec565b5090919050565b6000805160206112998339815191525460405163196d0b9b60e01b8152600091600080516020611279833981519152916001600160a01b039091169063196d0b9b906107af9088903390899089906004016111c0565b6020604051808303816000875af11580156107ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f2919061122b565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec90604401600060405180830381600087803b15801561083e57600080fd5b505af1158015610852573d6000803e3d6000fd5b50505050509392505050565b60006108718263ffffffff166004610b69565b92915050565b60008261088b57610888600061085e565b92505b8161089d5761089a600061085e565b91505b6106b583836000610c06565b6108de6002546106da6108c5846108c06001610cba565b610cca565b6108cf600161085e565b6108d9600061085e565b610cfc565b6002819055506108fb6003546106da6108c5846108c06002610cba565b6003819055506109186004546106da6108c5846108c06003610cba565b6004819055506109356005546106da6108c5846108c06004610cba565b60055550565b6109726006546106da6108c561095a85610955600f610cba565b610d09565b61096d866109686014610cba565b610d3b565b610d6d565b60065560075461099e906106da6108c5610990856109556015610cba565b61096d86610968601e610cba565b6007556008546109ca906106da6108c56109bc85610955601f610cba565b61096d866109686028610cba565b6008556009546109f6906106da6108c56109e8856109556029610cba565b61096d866109686032610cba565b600955600a54610a22906106da6108c5610a14856109556033610cba565b61096d86610968603c610cba565b600a55600b54610a3d906106da6108c584610955603d610cba565b600b5550565b610a5f600c546106da6108c584610a5a6001610d9f565b610db0565b600c55600d54610a7a906106da6108c584610a5a6002610d9f565b600d55600e54610a95906106da6108c584610a5a6003610d9f565b600e55600f54610ab0906106da6108c584610a5a6004610d9f565b600f55601054610acb906106da6108c584610a5a6005610d9f565b601055601154610ae6906106da6108c584610a5a6006610d9f565b60115550565b60006000805160206112798339815191528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b6290604401600060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b50505050505050565b60008051602061129983398151915254604051639cd07acb60e01b8152600091600080516020611279833981519152916001600160a01b0390911690639cd07acb90610bbb9087908790600401611244565b6020604051808303816000875af1158015610bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfe919061122b565b949350505050565b6000808215610c1a5750600160f81b610c1e565b5060005b6000805160206112998339815191525460405163022f65e760e31b8152600080516020611279833981519152916001600160a01b03169063117b2f3890610c6d90899089908790600401611258565b6020604051808303816000875af1158015610c8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb0919061122b565b9695505050505050565b60006108718260ff166002610b69565b600082610cde57610cdb6000610cba565b92505b81610cf057610ced6000610cba565b91505b6106b583836000610dd3565b6000610bfe848484610e3a565b600082610d1d57610d1a6000610cba565b92505b81610d2f57610d2c6000610cba565b91505b6106b583836000610ed5565b600082610d4f57610d4c6000610cba565b92505b81610d6157610d5e6000610cba565b91505b6106b583836000610f3c565b600082610d8157610d7e6000610fa3565b92505b81610d9357610d906000610fa3565b91505b6106b583836000610fc1565b60006108718261ffff166003610b69565b600082610dc457610dc16000610d9f565b92505b81610cf057610ced6000610d9f565b6000808215610de75750600160f81b610deb565b5060005b6000805160206112998339815191525460405163f77f3f1d60e01b8152600080516020611279833981519152916001600160a01b03169063f77f3f1d90610c6d90899089908790600401611258565b6000806000805160206112798339815191526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303816000875af1158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc919061122b565b95945050505050565b6000808215610ee95750600160f81b610eed565b5060005b60008051602061129983398151915254604051631391547f60e01b8152600080516020611279833981519152916001600160a01b031690631391547f90610c6d90899089908790600401611258565b6000808215610f505750600160f81b610f54565b5060005b60008051602061129983398151915254604051631d44e90160e21b8152600080516020611279833981519152916001600160a01b031690637513a40490610c6d90899089908790600401611258565b600061087182610fb4576000610fb7565b60015b60ff166000610b69565b6000808215610fd55750600160f81b610fd9565b5060005b6000805160206112998339815191525460405163d99882d560e01b8152600080516020611279833981519152916001600160a01b03169063d99882d590610c6d90899089908790600401611258565b60008083601f84011261103a57600080fd5b50813567ffffffffffffffff81111561105257600080fd5b60208301915083602082850101111561106a57600080fd5b9250929050565b600080600080600080600080600060c08a8c03121561108f57600080fd5b8935985060208a013567ffffffffffffffff808211156110ae57600080fd5b6110ba8d838e01611028565b909a50985060408c0135975060608c01359150808211156110da57600080fd5b6110e68d838e01611028565b909750955060808c0135945060a08c013591508082111561110657600080fd5b506111138c828d01611028565b915080935050809150509295985092959850929598565b60006020828403121561113c57600080fd5b81356001600160a01b03811681146106b557600080fd5b6020808252602b908201527f4d7573742062652072656769737465726564207573657220776974682073756260408201526a6d6974746564206461746160a81b606082015260800190565b605481106111bc57634e487b7160e01b600052602160045260246000fd5b9052565b8481526000602060018060a01b038616602084015260806040840152845180608085015260005b818110156112035786810183015185820160a0015282016111e7565b50600060a0828601015260a0601f19601f83011685010192505050610ecc606083018461119e565b60006020828403121561123d57600080fd5b5051919050565b828152604081016106b5602083018461119e565b92835260208301919091526001600160f81b03191660408201526060019056feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601a26469706673582212202c0c6efb11ff645f8fe112adcba5980a21f2d1d1a67d28b075fdef50b2dbe17164736f6c63430008180033ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601";

type PatientDemographicsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PatientDemographicsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PatientDemographics__factory extends ContractFactory {
  constructor(...args: PatientDemographicsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PatientDemographics & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PatientDemographics__factory {
    return super.connect(runner) as PatientDemographics__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PatientDemographicsInterface {
    return new Interface(_abi) as PatientDemographicsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PatientDemographics {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PatientDemographics;
  }
}
